package paqueteinterfaz;

import hamatealvaroperez.*;
import java.io.*;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;

/**
 * Esta clase ejecuta una ventana de RankingJug, en la cual se puede ver la clasificación de los jugadores registrados en el Hamate, sus puntos y sus partidas ganadas y jugadas.
 * @author Álvaro Pérez Álamo
 */
public class RankingJug extends javax.swing.JFrame {

    /**
     * Creates new form RankingJug
     */
    public RankingJug() {
        initComponents();
        initTexto();
    }

    /**
     * El método initTexto se encarga de escribir en jTextAreaTexto la clasificación de los jugadores.
     */
    public void initTexto() {
        try {
            FileInputStream fisRan = new FileInputStream("./src/paqueteinterfaz/ranking.ser");
            ObjectInputStream oisRan = new ObjectInputStream(fisRan);
            Ranking rank = (Ranking) oisRan.readObject();
            oisRan.close();
            fisRan.close();

            HashMap<String, JugadorUsuario> rankMap = rank.getRank();

            FileOutputStream fosRan = new FileOutputStream("./src/paqueteinterfaz/ranking.ser");
            ObjectOutputStream oosRan = new ObjectOutputStream(fosRan);
            oosRan.writeObject(rank);
            oosRan.close();
            fosRan.close();

            if(!rankMap.isEmpty()) {
                String str = "";
                ArrayList arr = rank.ordenarRankMay();
                for(int i = 0; i < rankMap.size(); i++) {
                    JugadorUsuario jugU = (JugadorUsuario) arr.get(i);
                    str = str + (i+1) + ".- " + jugU.getNombre() + " " + jugU.getApellidos() + " (" + jugU.getPunt() + "); Ganadas: " + jugU.getGanadas() + "/" + jugU.getJugadas() + "\n";
                }

                jTextAreaTexto.setText(str);
            }
        } catch(EOFException ex) {
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.toString(), "ERROR", JOptionPane.WARNING_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAtras = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaTexto = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonAtras.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonAtras.setText("<---");
        jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtrasActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel1.setText("-RANKING-");

        jTextAreaTexto.setEditable(false);
        jTextAreaTexto.setColumns(20);
        jTextAreaTexto.setRows(5);
        jScrollPane1.setViewportView(jTextAreaTexto);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButtonAtras))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(241, 241, 241)
                                .addComponent(jLabel1)))
                        .addGap(0, 243, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAtras)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Este método sucede cuando el usuario pulsa el botón atrás y lo que hace es volver al inicio, creando una ventana nueva Inicio.
     * @param evt
     */
    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtrasActionPerformed
        Inicio init = new Inicio();
        init.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_jButtonAtrasActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaTexto;
    // End of variables declaration//GEN-END:variables
}
